.TH metis 7 2010-10 "linux" "heatherly custom tools manual"

.SH NAME
.B metis
\- light, aesthetic, and useful personal task visualizer

.SH PATRON
.B metis-okeanides
(ocean-born) goddess of deep thought and wise counsel

.SH IMAGERY (see HERITAGE in man section 7 for more)
singularly graceful, stately, and regal with supreme gravitas

.SH SUMMARY
.B metis
is a aesthetic, keyboard-centric personal task visualizer with simple ascii
capture, consistent categorization, clean hierarchy for grouping, and meaningful
fields for sorting, searching and filtering.

.SH DOCUMENTATION FILES (see also)
 metis (1)          end-user command line, arguments, and options
 metis (5)          data standards, streams, files, and configuration
 metis (6)          interactive system usage and navigation
 metis (7)    ***   decision rationale, objectives, and overview

.SH TABLE OF CONTENTS
 definition         what is the subject matter
 situation          present state of capability
 complication       what concerns me
 answer             what i will do
 target user        who will use this code
 best practices     guidance from years of using these things
 standards          requirements for all my applications
 accepted           requirements that i expect to deliver
 rejected           requirements for another place, or nowhere

.SH DEFINITION OF CONCEPT (D)
.B personal task management
is the capturing, remembering, organizing, prioritizing, and stewarding
to completion small units of work replated only to me -- not work planning,
sequencing, or scheduling.

.SH SITUATION (S)
this is a very well studied area and oft followed area.  there are hundreds
of programs, across many platforms, to accomplish this.
 -- scancards  : while a dead product, it was wicked flexible and cool
 -- covey      : past the glitz was the age-old urgent/important
 -- gtd        : forget this, its a crack-infused rat-hole.  LOL.
 -- wunderlist : great ipad software, very nice, but all touch based
 -- list-it    : great newton system, but really just list mgmt
 -- zenbe      : sweet list app, my use evolved to a two layer system
 -- focuses    : our two layer visioning system

.SH COMPLICATION (C)
but, vendors come-and-go and theories-du-jour reign supreme.  software tends
to be proprietary and interfaces tend to be touch/mouse.

.SH ANSWER (A).  
build a keyboard-centric, ascii-text based, and focused task management
visualizer based on
.B scancards
that i can run literally forever.

.SH TARGET USER (T).  
me, myself, and i.

.SH BEST PPACTICES
.B no master/big list
, distributing lists to their sources keeps the scary volume of tasks hidden.
switch focuses, switch lists.

.B use urgent/important
, i think covey had it right with the matrix from eisenhower.  it allows the
mind to cut the list down.

.B quick estimating
, put a category of effort on tasks so that you can pick off smaller ones
fast, or big ones when you have time/focus.

.B no tracking
, skip on tracking dates and actual effort.  this is a obviously cool thing
that is a total time trap.

.B keep reality-based
, do not "imagine" possible tasks for some future scenario.  it adds
a lot of frightening, speculative bs to the lists.

.B no calendar/schedule
, this requires a lot of time control which most people do not have.
review the list, do what you can, move on.

.B do frequent sweeps
, fully delete completed tasks.  do not save history that you will never use.
its hard to delete, but do it.

.SH STANDARD REQUIREMENTS (#)
 -- run on any linux box from raspberry to cray
 -- stay focused, small, tight, reliable, and secure
 -- forgo sloppy, kitchen-sink languages, like python, java, or perl
 -- stay away from dependency on external code libraries, like boost
 -- only human-readable, 7-bit safe, ascii streams (not database)
 -- have dedicated, maintained, automated unit testing
 -- provide either detailed reporting or logging for debugging
 -- use secure communications between systems where required
 -- clean, clean code so i can maintain after long absences
 -- no international, multi-lang, multi-byte support (freaking ever)
 -- one-hundred percent keyboard driven and centric
 -- all tables must be self describing with labels and queries
 -- all data structures must include dumps, reports, and audits

.SH ACCEPTED REQUIREMENTS (a).  
 -- opengl interface to keep it aesthetic, but open source
 -- display in standard colors for rapid identification
 -- accept tasks from source code and ascii-text files
 -- use a standard task format and detault non-compliant
 -- include standard importance/urgency ratings
 -- allow basic estimating only by time categories
 -- provide simple progress categories to assist stewardship
 -- allow filtering by any and all of these categories
 -- allow sorting and filtering by text fields also
 -- provide filter mode to reformat and pass tasks on
 -- provide dump/reporting to display resuls

.SH REJECTED REQUIREMENTS (r).  
 -- no specialized database (all kept in ascii text format)
 -- no captive editing (edit tasks using vim)
 -- no specific task scheduling, like gantt
 -- no repeats or daily cycles (thats a different program)
 -- no task linking/sequencing to set up dependencies
 -- no assignment to personel/resources (thats work planning)
 -- no effort to allow sharing across multiple people
 -- no full screen modes (this is a helper, not the main dish)

.SH HERATIGE
.B metis-okeanides
(ocean-born) is the greek titan of wise counsel, prudence, deep thought,
and cunning.  she guided the successful olympian war to overtrough the titans.
she is renouned for her modesty, wisdom, and gravitas.

she is first born of oceanus and tethys, and was the first wife of zeus.
metis was later killed/eaten by zeus because he feared a prophecy that their
children would displace him (as he had done to his father).  their only child
was the goddess athena.

.SH AUTHOR
jelloshrike at gmail dot com

.SH COLOPHON
this page is part of a documentation package meant to make use of the
heatherly tools easier and faster.


